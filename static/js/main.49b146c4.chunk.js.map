{"version":3,"sources":["logo.svg","components/Loading.js","components/CastProfile.js","components/GenreResults.js","components/Header.js","components/MovieDetails.js","components/SimilarMovies.js","components/Cast.js","components/Videos.js","components/MoviePage.js","components/SearchError.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Loading","react_default","a","createElement","castProfile","castId","this","props","location","pathname","slice","indexOf","onMount","prevProps","currentCastId","window","scrollTo","bioData","castName","undefined","filmography","map","movie","index","Link","to","concat","id","key","poster_path","src","alt","original_title","release_date","substring","birthday","deathday","bio","castPhoto_path","name","Component","GenreResults","genreId","prevGenreId","currentGenreId","numberOfResults","results","searchResults","Header","e","preventDefault","input","value","history","push","onSearch","userInput","focus","_this","className","logo","onSubmit","type","ref","movieDetails","movieData","data","posterPath","altText","title","tagline","budget","toLocaleString","revenue","overview","genres","genre","runtime","SimilarMovies","similarMovies","similarMovieData","Cast","cast","castData","character","Videos","videos","videoData","video","url","width","height","frameBorder","MoviePage","movieId","currentMovieId","MovieDetails_movieDetails","Cast_Cast","SimilarMovies_SimilarMovies","Videos_Videos","SearchError","SearchResults","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","searchTerm","_this2","setState","searcherror","axios","get","then","res","total_results","backdrop_path","recommendations","_this3","_this4","all","spread","biography","profile_path","_this5","details","_this6","_this$state","BrowserRouter","basename","Route","path","render","Header_Header","assign","getSearchResults","exact","SearchResults_SearchResults","onSelectMovie","getMovieById","component","GenreResults_GenreResults","getMoviesByGenre","MoviePage_MoviePage","CastProfile_castProfile","getCastProfile","Boolean","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49b146c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.aa08fedf.svg\";","import React from 'react'\n\nexport default function Loading() {\n\treturn (\n\t<h1>Page is Loading...</h1>\n\t)\n}","import React, { Component } from 'react'\nimport Loading from './Loading'\nimport { Link } from 'react-router-dom'\n\n\nexport default class castProfile extends Component {\n\n    componentDidMount() {\n        const castId = this.props.location.pathname.slice(6, this.props.location.pathname.indexOf('-'))\n        this.props.onMount(castId)\n    }\n\n\n    componentDidUpdate(prevProps) {\n\n        const currentCastId = this.props.location.pathname.slice(6, this.props.location.pathname.indexOf('-'))\n        const prevCastId = prevProps.location.pathname.slice(6, this.props.location.pathname.indexOf('-'))\n        if (prevCastId !== currentCastId) {\n            this.props.onMount(currentCastId)\n        }\n        window.scrollTo(0, 0)\n    }\n\n    render() {\n        if (this.props.bioData.castName === null || this.props.filmography === undefined) {\n            return <Loading />\n        }\n\n\n        const filmography = this.props.filmography.map((movie, index) => (\n            <Link to={`/movie/${movie.id}`} key={index}>\n                <div>\n                    <div>{ (movie.poster_path === null) ? (<img src={'https://secure.hmepowerweb.com/Resources/Images/NoImageAvailableLarge.jpg'} alt='no poster found' />) : (<img src={`https://image.tmdb.org/t/p/w1280/${movie.poster_path}`} alt={movie.original_title} />) }</div>\n                    <h4>{movie.original_title}</h4>\n                    <h5>{movie.release_date.substring(0,4)}</h5>\n                </div>\n            </Link>\n        ))\n\n\n        return (\n            <div>\n                <h1>{ this.props.bioData.castName }</h1>\n                <p>{ this.props.bioData.birthday }</p>\n                <p>{ this.props.bioData.deathday }</p>\n                <p>{ this.props.bioData.bio }</p>\n                <div>{ (this.props.bioData.castPhoto_path === null) ? (<img src={'https://secure.hmepowerweb.com/Resources/Images/NoImageAvailableLarge.jpg'} alt='no poster found' />) : (<img src={`https://image.tmdb.org/t/p/w1280/${this.props.bioData.castPhoto_path}`} alt={this.props.bioData.name} />) }</div>\n                { filmography }\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Loading from './Loading'\nimport { Link } from 'react-router-dom'\n\nexport default class GenreResults extends Component {\n\n\n    componentDidMount() {\n        const genreId = this.props.location.pathname.slice(7, this.props.location.pathname.indexOf('-'))\n        this.props.onMount(genreId)\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevGenreId = prevProps.location.pathname.slice(7, this.props.location.pathname.indexOf('-'))\n        const currentGenreId = this.props.location.pathname.slice(7, this.props.location.pathname.indexOf('-'))\n        if (prevGenreId !== currentGenreId) {\n            this.props.onMount(currentGenreId)\n        }\n    }\n\n    render() {\n\n        if (this.props.numberOfResults === 0) {\n            return <Loading />\n        }\n\n        const results = this.props.searchResults.map((movie, index) => (\n            <Link to={`/movie/${movie.id}`} key ={index}>\n                <div>\n                    <div>{ (movie.poster_path === null) ? (<img src={'https://secure.hmepowerweb.com/Resources/Images/NoImageAvailableLarge.jpg'} alt='no poster found' />) : (<img src={`https://image.tmdb.org/t/p/w1280/${movie.poster_path}`} alt={movie.original_title} />) }</div>\n                    <h4>{movie.original_title}</h4>\n                    <h5>{movie.release_date.substring(0,4)}</h5>\n                </div>\n            </Link>\n        ))\n\n        return (\n            <section id=\"results\">\n            <p>{ `Your search returned ${ this.props.numberOfResults } results.` }</p>\n            {results}\n        </section>\n        )\n    }\n\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport logo from '../logo.svg'\nimport './Header.css'\n\nexport default class Header extends Component {\n\n    onSubmit(e) {\n        e.preventDefault()\n        if (this.input.value === \"\") {\n            this.props.history.push('/searcherror')\n        } else {\n\n            if (this.props.onSearch) {\n                const userInput = this.input.value\n                this.props.onSearch(userInput)\n            }\n            this.props.history.push('/results')\n\n            this.input.value = ''\n            this.input.focus()\n\n        }\n    }\n\n    render() {\n        return (\n            <header className=\"App-header\">\n                <Link to=\"\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></Link>\n                <form onSubmit={(e) => this.onSubmit(e)}>\n                    <input type=\"text\" name=\"userInput\" ref={input => (this.input = input)}/>\n                    <button>Search</button>\n                </form>\n            </header>\n        )\n    }\n\n}\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class movieDetails extends Component {\t\n\n\n\trender() {\n\tconst movieData = this.props.data\n\tconst posterPath = `https://image.tmdb.org/t/p/w1280/${movieData.poster_path}`\n    const altText = `${movieData.title} poster`\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>{movieData.title}</h1>\n\t\t\t\t<h2>{movieData.tagline}</h2>\n\t\t\t\t<img src={posterPath} alt={altText}/>\n\t\t\t\t<p>Budget: ${movieData.budget.toLocaleString()}</p>\n\t\t\t\t<p>Revenue: ${movieData.revenue.toLocaleString()}</p>\n\t\t\t\t<p>Plot: {movieData.overview}</p>\n\t\t\t\t<div>Genres: {movieData.genres.map((genre, index) => (\n\t\t\t\t\t<Link key={index} to={`/genre/${genre.id}-${genre.name}`}>{genre.name}</Link>\n\t\t\t\t\t))}</div>\n\t\t\t\t<p>Year released: {movieData.release_date.substring(0,4)}</p>\n\t\t\t\t<p>Runtime: {movieData.runtime} minutes</p>\n\t\t\t</div>\n\t\t)\n\t}\n\t\t\t\t\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class SimilarMovies extends Component {\n\n    render() {\n        const similarMovies = this.props.similarMovieData.map((movie, index) => (\n                <Link to={`/movie/${movie.id}`} key={index}><li>{movie.original_title} ({movie.release_date.substring(0,4)})</li></Link>\n        ))\n\n        return (    \n            <ul>\n                {similarMovies}\n\t\t\t</ul>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Cast extends Component {\n\n    render() {\n        const cast = this.props.castData.map((cast, index) => (\n            <li key={index}>{cast.character}: {<Link to={`/cast/${cast.id}-${cast.name}`}>{cast.name}</Link>}</li>\n        ))\n\n        return (    \n            <ul>\n                {cast}\n\t\t\t</ul>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Videos extends Component {\n\n    render() {\n        const videos = this.props.videoData.map((video, index) => {\n                const url = `https://www.youtube.com/embed/${video.key}`\n                return (\n                <div key={index}>\n                    <p>{video.name}</p>\n                    <iframe \n                    title={video.name}\n                    id=\"ytplayer\"\n                    type=\"text/html\"\n                    width=\"640\" height=\"360\"\n                    src= {url}\n                    frameBorder=\"0\">\n                    </iframe>\n                </div>\n                )\n        })\n\n        return (    \n            <ul>\n                {videos}\n\t\t\t</ul>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Loading from './Loading'\nimport MovieDetails from './MovieDetails'\nimport SimilarMovies from './SimilarMovies'\nimport Cast from './Cast'\nimport Videos from \"./Videos\"\n\nexport default class MoviePage extends Component {\n\n    componentDidMount() {\n        const movieId = this.props.location.pathname.slice(7)\n        this.props.onMount(movieId)\n    }\n\n\n    componentDidUpdate(prevProps) {  \n        const currentMovieId = this.props.location.pathname.slice(7)\n        const prevMovieId = prevProps.location.pathname.slice(7)\n        if (prevMovieId !== currentMovieId) {\n            this.props.onMount(currentMovieId)\n        }\n        window.scrollTo(0, 0)\n    }\n\n    render() {\n        const data = this.props.data\n        const castData = this.props.data.cast\n        const similarMovieData = this.props.data.similarMovies\n        const videoData = this.props.data.videos\n        if (!data.title) {\n            return <Loading />\n        }\n\n        return (\n            <div>\n                <MovieDetails data={data} />\n                <Cast castData={castData}/>\n                <SimilarMovies similarMovieData={similarMovieData} />\n                <Videos videoData={videoData}/>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nfunction SearchError() {\n    return (\n        <p>Please enter a search term.</p>\n    )\n}\n\nexport default SearchError","import React, { Component } from 'react'\nimport Loading from './Loading'\nimport { Link } from 'react-router-dom'\n\nexport default class SearchResults extends Component {\n\n    render() {\n\n        if (this.props.numberOfResults === 0) {\n            return <Loading />\n        }\n\n        const results = this.props.searchResults.map((movie, index) => (\n            <Link to={`/movie/${movie.id}`} key={index}>\n                <div>\n                    <div>{ (movie.poster_path === null) ? (<img src={'https://secure.hmepowerweb.com/Resources/Images/NoImageAvailableLarge.jpg'} alt='no poster found' />) : (<img src={`https://image.tmdb.org/t/p/w1280/${movie.poster_path}`} alt={movie.original_title} />) }</div>\n                    <h4>{movie.original_title}</h4>\n                    <h5>{movie.release_date.substring(0,4)}</h5>\n                </div>\n            </Link>\n        ))\n\n        return (\n        <section id=\"results\">\n            <p>{ `Your search returned ${ this.props.numberOfResults } results.` }</p>\n            {results}\n        </section>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport CastProfile from './components/CastProfile'\nimport GenreResults from './components/GenreResults'\nimport Header from './components/Header'\nimport MoviePage from './components/MoviePage'\nimport SearchError from './components/SearchError'\nimport SearchResults from './components/SearchResults'\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            searchResults: []\n        }\n    }\n\n    getSearchResults(searchTerm) {\n        this.setState({\n            numberOfResults: 0,\n            searcherror: []\n        })\n\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=8541c092938098d21b11f58a14dd114e&language=en&query=${searchTerm}`)\n            .then(res => {\n                this.setState({\n                    numberOfResults: res.data.total_results,\n                    searchResults: res.data.results,\n                    movieId: null,\n                    title: null,\n                    poster_path: null,\n                    backdrop_path: null,\n                    budget: null,\n                    revenue: null,\n                    genres: null,\n                    overview: null,\n                    tagline: null,\n                    release_date: null,\n                    runtime: null,\n                    cast: null,\n                    videos: null,\n                    recommendations: null,\n                    similarMovies: null\n                })\n            })\n    }\n\n    getMoviesByGenre(genreId) {\n        \n        this.setState({\n            numberOfResults: 0\n        })\n\n        axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=8541c092938098d21b11f58a14dd114e&sort_by=vote_average.desc&include_adult=false&include_video=false&language=en-US&page=1&vote_count.gte=5000&with_genres=${genreId}`)\n        .then(res => {\n            this.setState({\n                numberOfResults: res.data.total_results,\n                searchResults: res.data.results,\n                movieId: null,\n                title: null,\n                poster_path: null,\n                backdrop_path: null,\n                budget: null,\n                revenue: null,\n                genres: null,\n                overview: null,\n                tagline: null,\n                release_date: null,\n                runtime: null,\n                cast: null,\n                videos: null,\n                recommendations: null,\n                similarMovies: null\n            })\n        })\n    }\n\n    getCastProfile(castId) {\n        this.setState({\n            castName: null\n        })\n\n        function getFilmography() {\n            return axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=8541c092938098d21b11f58a14dd114e&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1&with_cast=${castId}&with_original_language=en`)\n        }\n\n        function getBio() {\n            return axios.get(`https://api.themoviedb.org/3/person/${castId}?api_key=8541c092938098d21b11f58a14dd114e&language=en-US`)\n        }\n\n        axios.all([getFilmography(), getBio()])\n            .then(axios.spread((filmography, bio) => {\n                this.setState({\n                    numberOfResults: filmography.data.total_results,\n                    filmography: filmography.data.results,\n                    castId: bio.data.id,\n                    birthday: bio.data.birthday,\n                    deathday: bio.data.deathday,\n                    castName: bio.data.name,\n                    bio: bio.data.biography,\n                    castPhoto_path: bio.data.profile_path\n                })\n            }))\n    }\n\n    getMovieById(id) {\n        function getMovieDetails() {\n            return axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=8541c092938098d21b11f58a14dd114e&language=en-US`)\n        }\n\n        function getMovieCast() {\n            return axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=8541c092938098d21b11f58a14dd114e&language=en-US`)\n\n        }\n\n        function getVideos() {\n            return axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=8541c092938098d21b11f58a14dd114e&language=en-US`)\n\n        }\n\n        function getSimilarMovies() {\n            return axios.get(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=8541c092938098d21b11f58a14dd114e&language=en-US`)\n\n        }\n\n        this.setState({\n            title: null\n        })\n\n        axios.all([getMovieDetails(), getMovieCast(), getVideos(), getSimilarMovies()])\n            .then(axios.spread((details, cast, videos, similarMovies) => {\n                this.setState({\n                    searchResults: [],\n                    movieId: details.data.id,\n                    title: details.data.original_title,\n                    poster_path: details.data.poster_path,\n                    backdrop_path: details.data.backdrop_path,\n                    budget: details.data.budget,\n                    revenue: details.data.revenue,\n                    genres: details.data.genres,\n                    overview: details.data.overview,\n                    tagline: details.data.tagline,\n                    release_date: details.data.release_date,\n                    runtime: details.data.runtime,\n                    cast: cast.data.cast,\n                    videos: videos.data.results,\n                    similarMovies: similarMovies.data.results\n                })\n            }))      \n    }\n\n\n    render() {\n        const { searchResults, numberOfResults, filmography } = this.state\n        return (\n            <Router basename=\"/movie-search\">\n            <main className=\"App\" >\n                <Route path=\"/\" render={ props => <Header onSearch={searchTerm => this.getSearchResults(searchTerm)} {...props}/> } />\n                <Route exact path=\"/results\" render={ props => <SearchResults searchResults={searchResults} numberOfResults={numberOfResults} onSelectMovie={id => this.getMovieById(id)} {...props}/> } />\n                <Route exact path=\"/searcherror\" component={ SearchError } />\n                <Route exact path=\"/genre/:id-:name\" render={ props => <GenreResults searchResults={searchResults} numberOfResults={numberOfResults} onMount={genreId => this.getMoviesByGenre(genreId)} {...props} /> } />\n                <Route exact path=\"/movie/:id\" render={ props => <MoviePage data={this.state} id={this.state.movieId} onMount={id => this.getMovieById(id)} {...props}/> } />\n                <Route exact path=\"/cast/:id-:name\" render={ props => <CastProfile filmography={ filmography } bioData={ this.state } onMount={id => this.getCastProfile(id)} {...props}/> } />\n            </main>\n            </Router>\n        )\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}